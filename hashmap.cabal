Name:                hashmap
Version:             1.3.3
Synopsis:            Persistent containers Map and Set based on hashing.
Description:         An implementation of persistent 'Map' and 'Set' containers
                     based on hashing. The implementation is build on
                     top of 'Data.IntMap.IntMap' and 'Data.IntSet.IntSet',
                     with very similar API. It uses 'Hashable' class from the
                     @hashable@ package for hashing.
                     .
                     This package can be used as a drop-in replacement for
                     'Data.Map' and 'Data.Set' modules.
                     .
                     The @'Map' key value@ is an 'Data.IntMap.IntMap'
                     indexed by the hash value, containing either one ('key', 'value')
                     or a @'Data.Map.Map' key value@ for all keys with the same hash value.
                     .
                     The @'Set' elem@ is an 'Data.IntMap.IntMap' indexed by
                     the hash value, containing either one 'elem' or @'Data.Set.Set' elem@ for
                     all elements with the same hash value.
Homepage:            https://github.com/foxik/hashmap
bug-reports:         https://github.com/foxik/hashmap/issues
License:             BSD3
License-file:        LICENSE
Author:              Milan Straka
Maintainer:          Ryan Scott <ryan.gl.scott@gmail.com>
Stability:           Provisional
copyright:           (C) 2011-2012 Milan Straka, 2016 Ryan Scott
Category:            Data
Build-type:          Simple
Cabal-version:       >= 1.6
Extra-source-files:  CHANGES, README.md, include/*.h
tested-with:         GHC == 7.0.4
                   , GHC == 7.2.2
                   , GHC == 7.4.2
                   , GHC == 7.6.3
                   , GHC == 7.8.4
                   , GHC == 7.10.3
                   , GHC == 8.0.2
                   , GHC == 8.2.2
                   , GHC == 8.4.1

source-repository head
  type: git
  location: https://github.com/foxik/hashmap

Flag OldContainers
  Description: Use old version of containers where NFData instances are provided by deepseq.
  Default: False

Library
  Exposed-modules: Data.HashMap, Data.HashSet
  include-dirs: include

  Build-depends: base >= 4.0 && < 5, hashable >= 1.0
  if !flag(OldContainers)
    Build-depends: containers >= 0.4.2, deepseq >= 1.2
  else
    Build-depends: containers >= 0.3, deepseq >= 1.0 && < 1.2

  Extensions: CPP
  if impl(ghc)
    Extensions: StandaloneDeriving, DeriveDataTypeable
